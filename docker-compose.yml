version: '3.8'

services:
  spring-boot-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: build/libs/AnySearch-0.0.1-SNAPSHOT.jar
    container_name: spring-boot-app
    ports:
      - "8081:8080"
    environment:
      - spring_elasticsearch_uris=http://es01:9200
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/ady_db
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - es01
      - es02
      - es03
      - db
    networks:
      - spring-boot-network

  es01:
    build:
      context: .
      dockerfile: Dockerfile.elasticsearch
    image: custom-elasticsearch:8.17.6
    container_name: es01
    volumes:
      - ./certs/certs.p12:/usr/share/elasticsearch/config/certs/certs.p12
    environment:
      - node.name=es01
      - cluster.name=my-es-cluster
      - node.roles=master,data,ingest
      - discovery.seed_hosts=es01,es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=none
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certs/certs.p12
      - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certs/certs.p12
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    networks:
      - spring-boot-network

  es02:
    build:
      context: .
      dockerfile: Dockerfile.elasticsearch
    image: custom-elasticsearch:8.17.6
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=my-es-cluster
      - node.roles=master,data
      - discovery.seed_hosts=es01,es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=none
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certs/certs.p12
      - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certs/certs.p12
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./certs/certs.p12:/usr/share/elasticsearch/config/certs/certs.p12
      - ./searchDictionary/:/usr/share/elasticsearch/config/dictionary/
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - spring-boot-network

  es03:
    build:
      context: .
      dockerfile: Dockerfile.elasticsearch
    image: custom-elasticsearch:8.17.6
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=my-es-cluster
      - node.roles=master
      - discovery.seed_hosts=es01,es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=none
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certs/certs.p12
      - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certs/certs.p12
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./certs/certs.p12:/usr/share/elasticsearch/config/certs/certs.p12
      - ./searchDictionary/:/usr/share/elasticsearch/config/dictionary/
      - esdata03:/usr/share/elasticsearch/data
    networks:
      - spring-boot-network

  db:
    image: postgres:16-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ady_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - spring-boot-network

  filebeat:
    build:
      context: .
      dockerfile: Dockerfile.filebeat
    container_name: filebeat
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeatdata:/usr/share/filebeat/data
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    networks:
      - spring-boot-network
    depends_on:
      - es01
      - spring-boot-app

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.6
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://es01:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
    networks:
      - spring-boot-network
    depends_on:
      - es01

  logstash:
    image: docker.elastic.co/logstash/logstash:8.17.6
    container_name: logstash
    ports:
      - "5044:5044" # Filebeat로부터 데이터를 받기 위한 포트
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - XPACK_MONITORING_ENABLED=true
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=http://es01:9200
      - XPACK_MONITORING_ELASTICSEARCH_USERNAME=elastic
      - XPACK_MONITORING_ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    networks:
      - spring-boot-network
    depends_on:
      - es01
      - es02
      - es03
volumes:
  esdata02:
  esdata03:
  dbdata:
  filebeatdata:

networks:
  spring-boot-network:
    driver: bridge